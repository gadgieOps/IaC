---
  ###
  # kube-apiserver

- name: Allow  direct kube-apiserver access IN
  community.general.ufw:
    rule: allow
    direction: in
    port: "{{ kube_api_port }}"
    src: "{{ item }}"
    dest: "{{ ansible_host }}"
    proto: tcp
    state: enabled
    insert: 0
    insert_relative_to: first-ipv4
    comment: "kube-apiserver IN"
  loop: "{{ groups['all'] | map('extract', hostvars, ['ansible_host']) | map('string') | list | reject('search', ansible_host) }}"

- name: Allow direct kube-apiserver access OUT
  community.general.ufw:
    rule: allow
    direction: out
    port: "{{ kube_api_port }}"
    src: "{{ ansible_host }}"
    dest: "{{ item }}"
    proto: tcp
    state: enabled
    insert: 0
    insert_relative_to: first-ipv4
    comment: "kube-apiserver OUT"
  loop: "{{ groups['all'] | map('extract', hostvars, ['ansible_host']) | map('string') | list | reject('search', ansible_host) }}"

- name: Allow vip kube-apiserver access IN
  community.general.ufw:
    rule: allow
    direction: in
    port: "{{ haproxy_port }}"
    src: "{{ item }}"
    dest: "{{ vip }}"
    proto: tcp
    state: enabled
    insert: 0
    insert_relative_to: first-ipv4
    comment: "kube-apiserver vip IN"
  loop: "{{ groups['all'] | map('extract', hostvars, ['ansible_host']) | map('string') | list | reject('search', ansible_host) }}"

- name: Allow vip kube-apiserver access OUT
  community.general.ufw:
    rule: allow
    direction: out
    port: "{{ haproxy_port }}"
    src: "{{ ansible_host }}"
    dest: "{{ vip }}"
    proto: tcp
    state: enabled
    insert: 0
    insert_relative_to: first-ipv4
    comment: "kube-apiserver vip OUT"

  ###
  # etcd

- name: Allow etcd client/peer traffic IN
  community.general.ufw:
    rule: allow
    direction: in
    port: "{{ etcd_client_port }}:{{ etcd_peer_port }}"
    src: "{{ item }}"
    dest: "{{ ansible_host }}"
    proto: tcp
    state: enabled
    insert: 0
    insert_relative_to: first-ipv4
    comment: "etcd client/peer IN"
  loop: "{{ groups['all'] | map('extract', hostvars, ['ansible_host']) | map('string') | list | reject('search', ansible_host) }}"

- name: Allow etcd client/peer traffic OUT
  community.general.ufw:
    rule: allow
    direction: out
    port: "{{ etcd_client_port }}:{{ etcd_peer_port }}"
    src: "{{ ansible_host }}"
    dest: "{{ item }}"
    proto: tcp
    state: enabled
    insert: 0
    insert_relative_to: first-ipv4
    comment: "etcd client/peer OUT"
  loop: "{{ groups['all'] | map('extract', hostvars, ['ansible_host']) | map('string') | list | reject('search', ansible_host) }}"

  ###
  # kubelet

- name: Allow kubelet metrics traffic IN
  community.general.ufw:
    rule: allow
    direction: in
    port: "{{ kubelet_metrics_port }}"
    src: "{{ item }}"
    dest: "{{ ansible_host }}"
    proto: tcp
    state: enabled
    insert: 0
    insert_relative_to: first-ipv4
    comment: "kubelet metrics IN"
  loop: "{{ groups['all'] | map('extract', hostvars, ['ansible_host']) | map('string') | list }}"

- name: Allow kubelet metrics API OUT
  community.general.ufw:
    rule: allow
    direction: out
    port: "{{ kubelet_metrics_port }}"
    src: "{{ ansible_host }}"
    dest: "{{ item }}"
    proto: tcp
    state: enabled
    insert: 0
    insert_relative_to: first-ipv4
    comment: "kubelet metrics OUT"
  loop: "{{ groups['all'] | map('extract', hostvars, ['ansible_host']) | map('string') | list }}"

  ###
  # Flannel Networking

- name: Allow VxLAN traffic IN
  community.general.ufw:
    rule: allow
    direction: in
    port: "{{ flannel_vxlan_port }}"
    src: "{{ item }}"
    dest: "{{ ansible_host }}"
    proto: udp
    state: enabled
    insert: 0
    insert_relative_to: first-ipv4
    comment: "flannel vxlan IN"
  loop: "{{ groups['all'] | map('extract', hostvars, ['ansible_host']) | map('string') | list | reject('search', ansible_host) }}"

- name: Allow VxLAN traffic OUT
  community.general.ufw:
    rule: allow
    direction: out
    port: "{{ flannel_vxlan_port }}"
    src: "{{ ansible_host }}"
    dest: "{{ item }}"
    proto: udp
    state: enabled
    insert: 0
    insert_relative_to: first-ipv4
    comment: "flannel vxlan OUT"
  loop: "{{ groups['all'] | map('extract', hostvars, ['ansible_host']) | map('string') | list | reject('search', ansible_host) }}"

  ###
  # Pod traffic

- name: Allow Pod traffic IN
  community.general.ufw:
    rule: allow
    direction: in
    src: "{{ pod_cidr}}"
    dest: "{{ item }}"
    proto: any
    state: enabled
    insert: 0
    insert_relative_to: first-ipv4
    comment: "Pod Traffic IN"
  loop:
    - "{{ ansible_host }}"
    - "{{ pod_cidr}}"

- name: Allow Pod traffic OUT
  community.general.ufw:
    rule: allow
    direction: out
    src: "{{ item }}"
    dest: "{{ pod_cidr }}"
    proto: any
    state: enabled
    insert: 0
    insert_relative_to: first-ipv4
    comment: "Pod Traffic OUT"
  loop:
    - "{{ ansible_host }}"
    - "{{ pod_cidr }}"

  ###
  # SVC traffic

- name: Allow SVC traffic IN
  community.general.ufw:
    rule: allow
    direction: in
    src: "{{ svc_cidr }}"
    dest: "{{ ansible_host }}"
    proto: any
    state: enabled
    insert: 0
    insert_relative_to: first-ipv4
    comment: "SVC Traffic IN"

- name: Allow SVC traffic OUT
  community.general.ufw:
    rule: allow
    direction: out
    src: "{{ ansible_host }}"
    dest: "{{ svc_cidr }}"
    proto: any
    state: enabled
    insert: 0
    insert_relative_to: first-ipv4
    comment: "SVC Traffic OUT"
